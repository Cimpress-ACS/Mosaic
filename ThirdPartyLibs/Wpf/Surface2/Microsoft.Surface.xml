<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.Surface</name>
	</assembly>
	<members>
		<member name="N:Microsoft.Surface">
			<summary>Provides classes that expose application-level events and system-level functionality to Microsoft Surface applications.</summary>
		</member>
		<member name="T:Microsoft.Surface.ApplicationServices">
			<summary>Provides application-level events and functionality related to the state of Microsoft Surface applications.</summary>
		</member>
		<member name="E:Microsoft.Surface.ApplicationServices.InactivityTimeoutOccurring">
			<summary>Occurs when a time-out is about to occur because the device has been inactive (in other words, received no user input) for a specific duration of time.</summary>
		</member>
		<member name="E:Microsoft.Surface.ApplicationServices.SessionEnded">
			<summary>Occurs whenever the user session ends, for example, when the user touches an access point and selects End Experience, or when a user session times out.</summary>
		</member>
		<member name="E:Microsoft.Surface.ApplicationServices.WindowInteractive">
			<summary>Occurs when this application is running in the foreground and users can interact with it.</summary>
		</member>
		<member name="E:Microsoft.Surface.ApplicationServices.WindowNoninteractive">
			<summary>Occurs when this application is visible and running in the foreground, but no users are interacting with it.</summary>
		</member>
		<member name="E:Microsoft.Surface.ApplicationServices.WindowUnavailable">
			<summary>Occurs when the application was previously being used, but now the user is deciding whether to continue or to push it to the background by opening a different application from Launcher.</summary>
		</member>
		<member name="M:Microsoft.Surface.ApplicationServices.ActivateApplication(System.String)">
			<summary>Overloaded. Activates a Microsoft Surface application by using a unique identifier.</summary>
			<param name="uniqueName">A case-insensitive name that uniquely identifies the installed Surface application. The uniqueName parameter is the name of the shortcut to the application's registration XML file, without the path or .lnk file name extension.</param>
		</member>
		<member name="M:Microsoft.Surface.ApplicationServices.ActivateApplication(System.String,Microsoft.Surface.UserOrientation)">
			<summary>Overloaded. Activates an installed Microsoft Surface application and sets the orientation for the system to a specified value, which that application will use.</summary>
			<param name="newSuggestedOrientation">A <see cref="T:Microsoft.Surface.UserOrientation"></see> value that specifies the requested orientation for the application.</param>
			<param name="uniqueName">A case-insensitive name that uniquely identifies the installed Surface application. The uniqueName parameter is the name of the shortcut to the application's registration XML file, without the path or .lnk file name extension.</param>
		</member>
		<member name="M:Microsoft.Surface.ApplicationServices.SignalApplicationLoadComplete">
			<summary>Indicates that a Microsoft Surface application has completed initialization and is ready to dismiss the loading screen.</summary>
		</member>
		<member name="P:Microsoft.Surface.ApplicationServices.InitialOrientation">
			<summary>Gets the direction in which Launcher was oriented when this application was initially launched.</summary>
			<returns>Returns a <see cref="T:Microsoft.Surface.UserOrientation"></see>.</returns>
		</member>
		<member name="P:Microsoft.Surface.ApplicationServices.SessionId">
			<summary>Gets the unique identifier of this user's session.</summary>
			<returns>Returns <see cref="T:System.Int64"></see>.</returns>
		</member>
		<member name="P:Microsoft.Surface.ApplicationServices.ShutdownReason">
			<summary>Gets a value that represents the reason why this application is being shut down.</summary>
			<returns>Returns a <see cref="T:Microsoft.Surface.ShutdownReason"></see> enumerated value that represents the reason why this application is being asked by the system to shut down.</returns>
		</member>
		<member name="P:Microsoft.Surface.ApplicationServices.WindowAvailability">
			<summary>Gets a value that represents which state the application window is in: unavailable, available but non-interactive, or available and interactive.</summary>
			<returns>Returns <see cref="T:Microsoft.Surface.WindowAvailability"></see>.</returns>
		</member>
		<member name="T:Microsoft.Surface.ApplicationServicesException">
			<summary>An <see cref="T:Microsoft.Surface.ApplicationServicesException"></see> exception is thrown if an application calls one of the <see cref="M:Microsoft.Surface.ApplicationServices.ActivateApplication(System.String)"></see> methods and the application is not currently connected to the Microsoft Surface Shell.</summary>
		</member>
		<member name="T:Microsoft.Surface.GlobalizationSettings">
			<summary>Provides globalization settings for Microsoft Surface.</summary>
		</member>
		<member name="M:Microsoft.Surface.GlobalizationSettings.ApplyToCurrentThread">
			<summary>Applies the globalization settings to the current thread.</summary>
		</member>
		<member name="M:Microsoft.Surface.GlobalizationSettings.ApplyToThread(System.Threading.Thread)">
			<summary>Applies the globalization settings to the specified thread.</summary>
			<param name="thread">The thread that should receive the current culture settings.</param>
		</member>
		<member name="P:Microsoft.Surface.GlobalizationSettings.CurrentCulture">
			<summary>Gets the current culture of Microsoft Surface.</summary>
			<returns>Returns <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
		</member>
		<member name="P:Microsoft.Surface.GlobalizationSettings.CurrentUICulture">
			<summary>Gets the current UI culture of Microsoft Surface.</summary>
			<returns>Returns <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
		</member>
		<member name="T:Microsoft.Surface.KeyboardLayout">
			<summary>Specifies the supported keyboard layouts for the Microsoft Surface on-screen keyboard.</summary>
		</member>
		<member name="F:Microsoft.Surface.KeyboardLayout.Alphanumeric">
			<summary>A keyboard layout with common alphanumeric keys and symbols. The layout can vary depending on the current globalization settings.</summary>
		</member>
		<member name="F:Microsoft.Surface.KeyboardLayout.Numeric">
			<summary>A typical numeric keypad layout for numbers and associated symbols. This layout is useful when your application requires only numbers.</summary>
		</member>
		<member name="T:Microsoft.Surface.SessionEndedEventArgs">
			<summary>Defines the arguments that are passed to <see cref="E:Microsoft.Surface.ApplicationServices.SessionEnded"></see> event handlers.</summary>
		</member>
		<member name="P:Microsoft.Surface.SessionEndedEventArgs.SessionId">
			<summary>Gets the unique identifier for the user session that is ending.</summary>
			<returns>Returns <see cref="T:System.Int64"></see>.</returns>
		</member>
		<member name="T:Microsoft.Surface.ShutdownReason">
			<summary>Specifies the reason why an application is being shut down.</summary>
		</member>
		<member name="F:Microsoft.Surface.ShutdownReason.None">
			<summary>The application encountered an unrecoverable error.</summary>
		</member>
		<member name="F:Microsoft.Surface.ShutdownReason.ResourceReclamation">
			<summary>The application was asked to shut down because the user is not currently using it and the system requires resources (such as CPU usage and memory) that are in use by this application.</summary>
		</member>
		<member name="F:Microsoft.Surface.ShutdownReason.SessionEnd">
			<summary>The application was asked to shut down because the user session is ending.</summary>
		</member>
		<member name="T:Microsoft.Surface.SurfaceEnvironment">
			<summary>Provides information about the availability of Microsoft Surface features, such as Surface Shell (which runs on devices made for Surface), and Surface input.</summary>
		</member>
		<member name="P:Microsoft.Surface.SurfaceEnvironment.IsSurfaceEnvironmentAvailable">
			<summary>Gets whether Surface Shell is present and running.</summary>
			<returns>The value is true if the application is running in Surface Shell; otherwise, if the application is running in a Windows environment, or if the application is running on a device made for Surface without Surface Shell running, the value is false.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceEnvironment.IsSurfaceInputAvailable">
			<summary>Gets whether Surface input is available and recognized.</summary>
			<returns>Returns true if the Core layer is loaded and input will flow through the Surface touch-related APIs; otherwise, returns false.</returns>
		</member>
		<member name="T:Microsoft.Surface.SurfaceKeyboard">
			<summary>Provides control of the Microsoft Surface on-screen keyboard to Surface applications that are running in Surface Shell on a device made for Surface.</summary>
		</member>
		<member name="E:Microsoft.Surface.SurfaceKeyboard.Hidden">
			<summary>Occurs when the on-screen keyboard is hidden on the Surface display.</summary>
		</member>
		<member name="E:Microsoft.Surface.SurfaceKeyboard.Shown">
			<summary>Occurs when the on-screen keyboard appears on the Surface display.</summary>
		</member>
		<member name="M:Microsoft.Surface.SurfaceKeyboard.AllowTextInputPanel(System.IntPtr)">
			<summary>Removes the window with the specified handle from the list of windows for which the Tablet PC text input panel is suppressed.</summary>
			<param name="hwnd">The handle of a window.</param>
		</member>
		<member name="M:Microsoft.Surface.SurfaceKeyboard.SuppressTextInputPanel(System.IntPtr)">
			<summary>Adds the window with the specified handle to the list of windows for which the Tablet PC text input panel is suppressed.</summary>
			<param name="hwnd">The handle of a window.</param>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.CenterX">
			<summary>Gets or sets the x-coordinate on the Surface screen where the horizontal center of the on-screen keyboard is located.</summary>
			<returns>Returns a <see cref="T:System.Single"></see> floating-point value that specifies the x-coordinate of the center of the on-screen keyboard, in pixels.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.CenterY">
			<summary>Gets or sets the y-coordinate on the Surface screen where the horizontal center of the on-screen keyboard is located.</summary>
			<returns>Returns a <see cref="T:System.Single"></see> floating-point value that specifies the y-coordinate of the center of the on-screen keyboard, in pixels.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.Height">
			<summary>Gets the height of the on-screen keyboard.</summary>
			<returns>Returns a <see cref="T:System.Single"></see> floating-point value that specifies the height of the keyboard, in pixels.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.IsNativeInputAllowed">
			<summary>Gets or sets a Boolean value that specifies whether the on-screen keyboard displays in a mode where an input method system, such as the Input Method Editor (IME) or the Text Services Framework (TSF), is enabled.</summary>
			<returns>The value is true if the element with keyboard focus has an input method system enabled; otherwise, it is false.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.IsVisible">
			<summary>Gets or sets a value that determines whether the on-screen keyboard is visible to users.</summary>
			<returns>The value is true if the keyboard is visible to users; otherwise, it is false.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.Layout">
			<summary>Gets or sets the layout of the Surface on-screen keyboard: alphanumeric or numeric.</summary>
			<returns>Returns a <see cref="T:Microsoft.Surface.KeyboardLayout"></see> enumeration value that specifies the keyboard layout.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.Rotation">
			<summary>Gets or sets the current angle of rotation of the on-screen keyboard, in radians.</summary>
			<returns>Returns a <see cref="T:System.Single"></see> floating-point value that specifies the current angle of rotation, in radians.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.ShowsFeedback">
			<summary>Gets or sets a Boolean value that specifies whether the on-screen keyboard displays touch visualizations when users touch a standard key.</summary>
			<returns>The value is true if the on-screen keyboard displays touch visualizations when users touch a standard key; otherwise, it is false.</returns>
		</member>
		<member name="P:Microsoft.Surface.SurfaceKeyboard.Width">
			<summary>Gets the width of the on-screen keyboard.</summary>
			<returns>Returns a <see cref="T:System.Single"></see> floating-point value that specifies the width of the keyboard, in pixels.</returns>
		</member>
		<member name="T:Microsoft.Surface.UserNotifications">
			<summary>Provides the events and methods that a Microsoft Surface application running on a device made for Surface uses to display notifications to users.</summary>
		</member>
		<member name="E:Microsoft.Surface.UserNotifications.NotificationDismissed">
			<summary>Occurs when a notification is removed from the Microsoft Surface display.</summary>
		</member>
		<member name="E:Microsoft.Surface.UserNotifications.NotificationDisplayed">
			<summary>Occurs when the Microsoft Surface software displays a notification.</summary>
		</member>
		<member name="M:Microsoft.Surface.UserNotifications.RequestNotification(System.String,System.String)">
			<summary>Overloaded. Displays a notification on the Microsoft Surface screen, with the specified title and message.</summary>
			<param name="messageText">The message text to be displayed in the notification. If the length of the string exceeds the space available for the message, the message will be truncated with ellipses.</param>
			<param name="messageTitle">The title text to be displayed in the notification. If the length of the string exceeds the space available for the title, the title will be truncated with ellipses.</param>
		</member>
		<member name="M:Microsoft.Surface.UserNotifications.RequestNotification(System.String,System.String,System.String)">
			<summary>Overloaded. Displays a notification on the Microsoft Surface screen, with the specified title, message, and graphic.</summary>
			<param name="messageText">The message text to be displayed in the notification. If the length of the string exceeds the space available for the message, the message will be truncated with ellipses.</param>
			<param name="imagePath">The absolute file path to the image that should be displayed in the notification.</param>
			<param name="messageTitle">The title text to be displayed in the notification. If the length of the string exceeds the space available for the title, the title will be truncated with ellipses.</param>
		</member>
		<member name="M:Microsoft.Surface.UserNotifications.RequestNotification(System.String,System.String,System.TimeSpan)">
			<summary>Overloaded. Displays a notification on the Microsoft Surface screen, with the specified title and message, and a time limit to display the notification.</summary>
			<param name="messageText">The message text to be displayed in the notification. If the length of the string exceeds the space available for the message, the message will be truncated with ellipses.</param>
			<param name="duration">A <see cref="T:System.TimeSpan"></see> object that represents the length of time that the notification appears. This value must be greater than or equal to 1 second and less than or equal to 300 seconds. This duration does not include the time that is required for the notification area to fade from the Surface screen.</param>
			<param name="messageTitle">The title text to be displayed in the notification. If the length of the string exceeds the space available for the title, the title will be truncated with ellipses.</param>
		</member>
		<member name="M:Microsoft.Surface.UserNotifications.RequestNotification(System.String,System.String,System.String,System.String)">
			<summary>Overloaded. Displays a notification on the Microsoft Surface screen, with the specified title and message, a graphic, and the name of the related application.</summary>
			<param name="messageText">The message text to be displayed in the notification. If the length of the string exceeds the space available for the message, the message will be truncated with ellipses.</param>
			<param name="applicationName">The name of a registered application. You can use this parameter to pass the name of an application to open using one of the <see cref="M:Microsoft.Surface.ApplicationServices.ActivateApplication(System.String)"></see> methods. For example, a standard application designed as a jukebox could continue to play music in the background even if the user is now playing a game. When a song is about to end, the jukebox application could display a notification with the name of the song and a button that the user could touch to purchase the song. When the user clicks the button, the jukebox application could activate a new music store application window. The user could return to the game after the purchase.</param>
			<param name="imagePath">The absolute file path to the image that should be displayed in the notification.</param>
			<param name="messageTitle">The title text to be displayed in the notification. If the length of the string exceeds the space available for the title, the title will be truncated with ellipses.</param>
		</member>
		<member name="M:Microsoft.Surface.UserNotifications.RequestNotification(System.String,System.String,System.String,System.TimeSpan)">
			<summary>Overloaded. Displays a notification on the Microsoft Surface screen, with the specified title and message, a graphic, and a time limit to display the notification.</summary>
			<param name="messageText">The message text to be displayed in the notification. If the length of the string exceeds the space available for the message, the message will be truncated with ellipses.</param>
			<param name="duration">A <see cref="T:System.TimeSpan"></see> object that represents the length of time that the notification appears. This value must be greater than or equal to 1 second and less than or equal to 300 seconds. This duration does not include the time that is required for the notification area to fade from the Surface screen.</param>
			<param name="imagePath">The absolute file path to the image that should be displayed in the notification.</param>
			<param name="messageTitle">The title text to be displayed in the notification. If the length of the string exceeds the space available for the title, the title will be truncated with ellipses.</param>
		</member>
		<member name="M:Microsoft.Surface.UserNotifications.RequestNotification(System.String,System.String,System.String,System.TimeSpan,System.String)">
			<summary>Overloaded. Displays a notification on the Microsoft Surface screen, with the specified title and message, a graphic, a time limit to display the notification, and the name of the related application.</summary>
			<param name="messageText">The message text to be displayed in the notification. If the length of the string exceeds the space available for the message, the message will be truncated with ellipses.</param>
			<param name="applicationName">The name of a registered application. You can use this parameter to pass the name of an application to open using one of the <see cref="M:Microsoft.Surface.ApplicationServices.ActivateApplication(System.String)"></see> methods. For example, a standard application designed as a jukebox could continue to play music in the background even if the user is now playing a game. When a song is about to end, the jukebox application could display a notification with the name of the song and a button that the user could touch to purchase the song. When the user clicks the button, the jukebox application could activate a new music store application window. The user could return to the game after the purchase.</param>
			<param name="duration">A <see cref="T:System.TimeSpan"></see> object that represents the length of time that the notification appears. This value must be greater than or equal to 1 second and less than or equal to 300 seconds. This duration does not include the time that is required for the notification area to fade from the Surface screen.</param>
			<param name="imagePath">The absolute file path to the image that should be displayed in the notification.</param>
			<param name="messageTitle">The title text to be displayed in the notification. If the length of the string exceeds the space available for the title, the title will be truncated with ellipses.</param>
		</member>
		<member name="T:Microsoft.Surface.UserOrientation">
			<summary>Represents the orientation of an application according to the long sides of the Microsoft Surface display.</summary>
		</member>
		<member name="F:Microsoft.Surface.UserOrientation.Bottom">
			<summary>The orientation corresponds to the edge of the screen that Windows treats as the bottom.</summary>
		</member>
		<member name="F:Microsoft.Surface.UserOrientation.Top">
			<summary>The orientation is rotated 180 degrees from the <see cref="F:Microsoft.Surface.UserOrientation.Bottom"></see> orientation.</summary>
		</member>
		<member name="T:Microsoft.Surface.WindowAvailability">
			<summary>Represents the state of the application window: unavailable, visible to the user but non-interactive, or visible to the user and interactive.</summary>
		</member>
		<member name="F:Microsoft.Surface.WindowAvailability.Interactive">
			<summary>The application window is visible to the user and can accept user input. You can process touch data in this state.</summary>
		</member>
		<member name="F:Microsoft.Surface.WindowAvailability.Noninteractive">
			<summary>The application window is visible to the user but cannot accept user input. For example, this value could indicate that the application is loading.</summary>
		</member>
		<member name="F:Microsoft.Surface.WindowAvailability.Unavailable">
			<summary>The application window is not visible to the user. In this state, you should program your application to enter a low-CPU usage state.</summary>
		</member>
		<member name="T:Microsoft.Surface.WindowAvailabilityChangedEventArgs">
			<summary>Defines the arguments that are passed to the <see cref="E:Microsoft.Surface.ApplicationServices.WindowInteractive"></see>, <see cref="E:Microsoft.Surface.ApplicationServices.WindowNoninteractive"></see>, and <see cref="E:Microsoft.Surface.ApplicationServices.WindowUnavailable"></see> events to provide information about the previous and current states of the application window.</summary>
		</member>
		<member name="P:Microsoft.Surface.WindowAvailabilityChangedEventArgs.NewWindowAvailability">
			<summary>Gets a value that represents the new state of the application window.</summary>
			<returns>Returns <see cref="T:Microsoft.Surface.WindowAvailability"></see>.</returns>
		</member>
		<member name="P:Microsoft.Surface.WindowAvailabilityChangedEventArgs.OldWindowAvailability">
			<summary>Gets a value that represents the previous state of the application window.</summary>
			<returns>Returns <see cref="T:Microsoft.Surface.WindowAvailability"></see>.</returns>
		</member>
	</members>
</doc>
